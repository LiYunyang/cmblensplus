
w8dir = ../../../DATAS/WEIGHTS/

# generate gradient map
WantGMAP = T

# generate lensed Cl of simulated map
WantLCl = T

# simuate lensed polarization maps
want_pol = F

# lensed maps with a single realization of lensing potential
lensfix = F

want_ucmb = T

# number of realization
sn1 = 1
sn2 = 200

#Healpix nside
nside = 2048
#nside = 1024

#note need lmax approx 250 larger than lmax you are interested in
lmax = 3000
#lmax = 2048
#lmax = 1024

#inputs should be T, EE, TE, phi, Tphi
cls_file = ../../../DATAS/cls/fid_P15.dat
TBEB = F
#cls_file = ../../../DATAS/cls/W9_totCls.dat
#cls_phi  = ../../../DATAS/cls/W9_phi.dat
#cls_vio  = ../../../DATAS/cls/W9_vio.dat
out_file_root = ../../../../scratch/plk/input/

#lens_method 1 uses fast pixel remapping, 2 is slow and exact
lens_method = 1

#The approx lensing is generated from a map at nside*interp_factor resolution
#For interp_method=0, must be power of 2; 8 seems OK for 0.5% accuracy on TT, EE up to l=2000 if nside = 1024
#For interp_method = 1, can be anything, 3 is very good for nside=1024, 1.5 for nside=2048
# - note for interp_method = 1 the number of high-res pixels around the equator is ~ 4*nside*interp_factor; 
# - equivalent healpix mean pixel-centre separation would be for nside_healpix ~ nside*interp_factor/sqrt(2)
# - for high accuracy probably need interp_factor ~ 2048/nside*1.5
interp_factor = 1.5
#interp_factor = 0.75

#1 is using bicubic in equi-cylindical pixels, 0 is naive healpix remapping
interp_method = 1

#1: approx equal rows per MPI thread, 2: equal pixels (by SJS) is better for exact simulation; 3 balanced (usually best)
mpi_division_method = 3

#Set to -1 not to fix seed
rand_seed = -1

